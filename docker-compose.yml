# For more information: https://laravel.com/docs/sail
version: "3"
services:
#  marvel.test: # This name should be same as your env APP_SERVICE value
#    build:
#      context: ./vendor/laravel/sail/runtimes/8.1
#      dockerfile: Dockerfile
#      args:
#        WWWGROUP: "${WWWGROUP}"
#    image: sail-8.1/app
#    ports:
#      - "${APP_PORT:-80}:80"
#    environment:
#      WWWUSER: "${WWWUSER}"
#      LARAVEL_SAIL: 1
#    volumes:
#      - ".:/var/www/html"
#    networks:
#      - sail
#    depends_on:
#      - mysql
#      - redis
  nginx:
    container_name: nginx
    build:
      context: .docker/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - .docker/nginx/pixer-api.conf:/etc/nginx/conf.d/pixer-api.conf
    depends_on:
      - php
    networks:
      - pixer-api
  php:
    container_name: php
    build:
      context: .docker/php
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/html
    ports:
      - 9000:9000
    networks:
      - pixer-api

  mysql:
    image: "mysql:8.0"
    platform: 'linux/x86_64'
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - ".docker/mysql:/var/lib/mysql"
    networks:
      - pixer-api
  redis:
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "marvel_redis:/data"
    networks:
      - pixer-api

  artisan:
    container_name: artisan
    build:
      context: .docker/php
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "php","/var/www/html/artisan" ]
    networks:
      - pixer-api

  npm:
    container_name: npm
    image: node:latest
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - pixer-api

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - pixer-api
networks:
  pixer-api:
    driver: bridge
volumes:
  marvel_mysql:
    driver: local
  marvel_redis:
    driver: local
